# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
      - 'dev/**'
  pull_request:
    branches: [ main ]
  release:
    types:
      - published

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.7
          - 3.8
          - 3.9
          - "3.10"
          - "3.11"

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .
        python -m pip install pylint
        python -m pip install pytest
        python -m pip install mypy

    - name: Lint with pylint
      run: pylint --rcfile tests/pylint.rc peakrdl_cheader

    # - name: Typing check with mypy
    #   run: mypy src/peakrdl_python --config-file=tests/.mypy.ini

    - name: Generate testcases
      run: |
        peakrdl_cheader tests/testcases/basic.rdl --outdir testcase_output/ --top basic
        gcc testcase_output/basic/tests/test_basic.c -I testcase_output/basic/reg_model -o testcase_output/basic/basic
        testcase_output/basic/basic

#-------------------------------------------------------------------------------
  build_sdist:
    needs:
      - tests
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.10"

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

#-------------------------------------------------------------------------------
  deploy:
    needs:
      - build_sdist

    runs-on: ubuntu-latest

    # Only publish when a GitHub Release is created.
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
